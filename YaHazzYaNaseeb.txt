import React, { useState } from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { motion } from "framer-motion";

const prizes = [
  "๐ข ุญุงูู ูุฑุฉ ุฃุฎุฑู",
  "๐ฅณ ูุจุฑูู! ุฑุจุญุช 5 ุฏููุงุฑ",
  "๐ฎ ูุจุฑูู! ุฑุจุญุช 10 ุฏููุงุฑ",
  "๐ ูุงู! ุฑุจุญุช 50 ุฏููุงุฑ",
  "๐ฐ ุฃูู ูุจุฑูู! ุฑุจุญุช 1000 ุฏููุงุฑ",
  "๐ ูุง ุญุธ ุงูููู"
];

export default function YaHazzYaNaseeb() {
  const [loggedIn, setLoggedIn] = useState(false);
  const [phone, setPhone] = useState("");
  const [password, setPassword] = useState("");
  const [paymentDone, setPaymentDone] = useState(false);
  const [result, setResult] = useState(null);
  const [loading, setLoading] = useState(false);
  const [supportMessage, setSupportMessage] = useState("");
  const [adminView, setAdminView] = useState(false);
  const [players, setPlayers] = useState([]);

  const handleLogin = () => {
    if (phone && password) {
      setLoggedIn(true);
      setPlayers([...players, phone]);
    }
  };

  const handlePayment = () => {
    setPaymentDone(true);
  };

  const openBox = () => {
    setLoading(true);
    setTimeout(() => {
      const prize = prizes[Math.floor(Math.random() * prizes.length)];
      setResult(prize);
      setLoading(false);
    }, 1500);
  };

  if (adminView) {
    return (
      <div className="min-h-screen bg-gray-100 p-6">
        <h1 className="text-2xl font-bold mb-4">๐ ููุญุฉ ุชุญูู ุงูุฅุฏุงุฑุฉ</h1>
        <p>ุนุฏุฏ ุงููุงุนุจูู ุงููุณุฌููู: {players.length}</p>
        <ul className="mt-4 list-disc pl-5">
          {players.map((p, i) => (
            <li key={i}>{p}</li>
          ))}
        </ul>
        <Button onClick={() => setAdminView(false)} className="mt-6 bg-blue-500 text-white">
          ุงูุฑุฌูุน ููุนุจุฉ
        </Button>
      </div>
    );
  }

  if (!loggedIn) {
    return (
      <div className="min-h-screen flex flex-col items-center justify-center bg-gradient-to-br from-yellow-100 to-pink-200 p-4">
        <h1 className="text-3xl font-bold mb-4">๐ ูุง ุญุธุ ูุง ูุตูุจ</h1>
        <Card className="w-full max-w-sm shadow-xl">
          <CardContent className="p-6 space-y-4">
            <Input
              placeholder="ุฑูู ุงูุฌูุงู"
              value={phone}
              onChange={(e) => setPhone(e.target.value)}
            />
            <Input
              type="password"
              placeholder="ูููุฉ ุงููุฑูุฑ"
              value={password}
              onChange={(e) => setPassword(e.target.value)}
            />
            <Button onClick={handleLogin} className="w-full bg-yellow-500 hover:bg-yellow-600 text-white">
              ุชุณุฌูู ุงูุฏุฎูู
            </Button>
            <Button variant="ghost" onClick={() => setAdminView(true)} className="text-xs text-gray-500">
              ุฏุฎูู ุงูุฅุฏุงุฑุฉ
            </Button>
          </CardContent>
        </Card>
      </div>
    );
  }

  if (!paymentDone) {
    return (
      <div className="min-h-screen flex flex-col items-center justify-center bg-pink-100 p-6">
        <h2 className="text-2xl font-bold mb-4">โ ุณุฌููุช ุงูุฏุฎูู</h2>
        <p className="mb-6">ุงูุฑุฌุงุก ุฏูุน 5 USDT ุนุจุฑ Binance Pay ูุชุฌุฑุจุฉ ุญุธู.</p>
        <Button
          onClick={handlePayment}
          className="bg-green-500 hover:bg-green-600 text-white"
        >
          ุฏูุน ุงูุขู (ูุญุงูุงุฉ)
        </Button>
      </div>
    );
  }

  return (
    <div className="min-h-screen flex flex-col items-center justify-center bg-gradient-to-br from-yellow-100 to-pink-200 p-6">
      <h1 className="text-4xl font-extrabold mb-6">๐ฒ ุงูุชุญ ุงูุตูุฏูู!</h1>

      <motion.div
        className="bg-white rounded-2xl shadow-2xl p-8 text-center w-full max-w-sm"
        initial={{ scale: 0.9 }}
        animate={{ scale: 1 }}
        transition={{ duration: 0.3 }}
      >
        <Button
          disabled={loading}
          onClick={openBox}
          className="w-full bg-purple-600 hover:bg-purple-700 text-white mb-4"
        >
          {loading ? "ุฌุงุฑู ุงููุชุญ..." : "ุงูุชุญ ุงูุตูุฏูู ๐"}
        </Button>
        {result && (
          <motion.div
            className="text-xl font-bold text-center mt-4"
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
          >
            {result}
          </motion.div>
        )}
      </motion.div>

      <div className="mt-8 text-sm text-gray-600 w-full max-w-sm">
        <h2 className="text-md font-bold mb-2">๐ฉ ุฎุฏูุฉ ุงูุนููุงุก</h2>
        <Input
          placeholder="ุงูุชุจ ูุดููุชู ุฃู ุงุณุชูุณุงุฑู"
          value={supportMessage}
          onChange={(e) => setSupportMessage(e.target.value)}
        />
        <Button className="mt-2 bg-blue-500 text-white w-full" onClick={() => alert("ุชู ุฅุฑุณุงู ุงูุฑุณุงูุฉ! ุณูุฑุฏ ุนููู ูุฑูุจูุง.")}>ุฅุฑุณุงู</Button>
      </div>

      <div className="mt-8 text-sm text-gray-500">
        * ูุฐู ุงููุนุจุฉ ููุชุฑููู ููุท - ูุง ุชูุฌุฏ ุฌูุงุฆุฒ ูุนููุฉ ุญุงูููุง
      </div>
    </div>
  );
}
